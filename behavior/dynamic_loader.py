
import os
import importlib
import sys
from utils.log import log_error, log_private

AUTOGENERATED_THOUGHTS = "cognition/self_generated/autogenerated_thoughts.py"

def reload_generated_module():
    mod_name = AUTOGENERATED_THOUGHTS
    try:
        # Ensure the file actually exists before import
        if not os.path.exists(AUTOGENERATED_THOUGHTS):
            log_error(f"[reload_generated_module] File missing: {AUTOGENERATED_THOUGHTS}")
            return None
        if mod_name in sys.modules:
            importlib.reload(sys.modules[mod_name])
        else:
            importlib.import_module(mod_name)
        return sys.modules[mod_name]
    except Exception as e:
        log_error(f"[reload_generated_module] Failed to load module: {e}")
        return None
    

def call_generated_function(function_name):
    module = reload_generated_module()
    if not module:
        log_error(f"⚠️ Cannot call {function_name}: module failed to load")
        return False

    func = getattr(module, function_name, None)
    if callable(func):
        try:
            func()
            log_private(f"▶️ Successfully ran dynamic function: {function_name}")
            return True
        except Exception as e:
            log_error(f"[call_generated_function] Exception running {function_name}: {e}")
            return False
    else:
        log_error(f"⚠️ Dynamic function {function_name} not found in module")
        return False